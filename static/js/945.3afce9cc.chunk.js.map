{"version":3,"file":"static/js/945.3afce9cc.chunk.js","mappings":"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","sources":["components/atoms/TextElement/Date.tsx","components/molecules/ItemsHeader/StyledItemsHeader.tsx","components/molecules/ItemsHeader/ItemsHeader.tsx","components/molecules/ItemsInform/StyledItemsInform.tsx","components/molecules/ItemsInform/ItemsInform.tsx","components/organisms/Item/StyledItem.tsx","components/organisms/Item/Item.tsx","components/organisms/ItemContainer/ItemContainer.tsx","components/organisms/ItemList/StyledItemList.tsx","components/organisms/ItemList/ItemList.tsx"],"sourcesContent":["import { Item } from '../../../app/types/Item';\r\nimport { Props as TextProps, TitleThird } from './TextElement';\r\n\r\ninterface Props extends TextProps {\r\n    children: Item['date'];\r\n}\r\n\r\nexport const DateText = ({ children, light, center }: Props) => {\r\n    return (\r\n        <TitleThird light={light} center={center}>\r\n            {children}\r\n        </TitleThird>\r\n    );\r\n};\r\n","import styled from \"styled-components\";\r\nimport { color } from \"../../../styles/variables\";\r\n\r\nexport const Div = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n`\r\nexport const Button = styled.button`\r\n    background: transparent;\r\n    border:none;\r\n    outline: none;\r\n    font-size:20px;\r\n    font-size: 600;\r\n    color:${color.background};\r\n    /* transition: all 0.2s ease; */\r\n    &:hover{\r\n        cursor: pointer;\r\n        transform: scale(1.2);\r\n    }\r\n`","import { useEffect, useState } from \"react\";\r\nimport Checkbox from \"../../atoms/Checkbox/Checkbox\";\r\nimport { Div, Button } from \"./StyledItemsHeader\";\r\ninterface Props {\r\n  isSelect: boolean;\r\n  \r\n  onSelect: (isSelect: boolean) => void;\r\n  onDelete: () => void;\r\n}\r\n\r\nconst ItemsHeader = ({ isSelect, onSelect, onDelete }: Props) => {\r\n    const [isChecked, setChecked] = useState<boolean>(false);\r\n\r\n    const setSelect = useEffect(() => {\r\n        setChecked(isSelect);\r\n    });\r\n\r\n    const handleChange = () => {\r\n        setChecked(!isChecked);\r\n        onSelect(isChecked);\r\n    };\r\n\r\n    return (\r\n        <Div>\r\n            <Checkbox primary checked={isChecked} onChange={handleChange}></Checkbox>\r\n            <Button onClick={onDelete}>X</Button>\r\n        </Div>\r\n    );\r\n};\r\n\r\nexport default ItemsHeader;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Div = styled.div`\r\n    display: grid;\r\n    grid-row-gap: 8px;\r\n`","import { TitleSecondary } from '../../atoms/TextElement/TextElement'\r\nimport {DateText} from '../../atoms/TextElement/Date'\r\nimport {Div} from './StyledItemsInform'\r\nimport { Item } from '../../../app/types/Item';\r\ninterface Props{\r\n    title:string;\r\n    date:Item['date'];\r\n}\r\n\r\nconst ItemsInform= ({title, date}:Props) => {\r\n    return (\r\n        <Div>\r\n            <TitleSecondary light>{title}</TitleSecondary>\r\n            <DateText light>{date}</DateText>\r\n        </Div>\r\n    )\r\n}\r\n\r\nexport default ItemsInform;","import styled from \"styled-components\"\r\nimport { ProgressPlugin } from \"webpack\";\r\nimport { color } from \"../../../styles/variables\"\r\n\r\nexport interface DivProps{\r\n    isComplited:boolean,\r\n    isSelected:boolean,\r\n}\r\n\r\nexport const Container =styled.div<DivProps>`\r\n    display:flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    background: transparent;\r\n    border: 3px solid ${color.background};\r\n    border-radius:24px;\r\n    transition: all 0.3s ease;\r\n    ${props => props.isComplited &&`\r\n        background: ${color.primaryDark};\r\n        border: 3px solid ${color.primaryDark};\r\n    `}\r\n    ${props => props.isSelected &&`\r\n        background: ${color.primaryDark};\r\n        border: 3px solid ${color.background};\r\n    `}\r\n`;\r\n\r\nexport const Div=styled.div`\r\n    display:grid;\r\n    padding: 16px;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    border-radius: 0 0 20px 20px;\r\n    border: none;\r\n    background: none;\r\n    border-top: solid 3px ${color.background};\r\n    text-align: center;\r\n    padding: 16px 24px;\r\n    color: ${color.background};\r\n    font-size: 20px;\r\n    letter-spacing: 0.16em;\r\n    cursor:pointer;\r\n    transition: all 0.3s ease;\r\n\r\n    \r\n`;","import { Link } from 'react-router-dom';\r\nimport { dateT, idT } from '../../../app/types/Item';\r\nimport { Paths } from '../../../routes/Paths';\r\nimport ItemsHeader from '../../molecules/ItemsHeader/ItemsHeader';\r\nimport ItemInform from '../../molecules/ItemsInform/ItemsInform';\r\nimport { Button, Container, Div } from './StyledItem';\r\n\r\ninterface Props {\r\n    id: idT;\r\n    title: string;\r\n    date: dateT;\r\n    isCompleted: boolean;\r\n    isSelect: boolean;\r\n\r\n    onDelete: () => void;\r\n    onSelect: (isSelect: boolean) => void;\r\n    onCompleted: () => void;\r\n}\r\n\r\nconst Item = ({\r\n    id,\r\n    title,\r\n    date,\r\n    isCompleted,\r\n    isSelect,\r\n\r\n    onCompleted,\r\n    onDelete,\r\n    onSelect,\r\n}: Props) => {\r\n    return (\r\n        <Container isComplited={isCompleted} isSelected={isSelect}>\r\n            <Div>\r\n                <ItemsHeader\r\n                    isSelect={isSelect}\r\n                    onSelect={onSelect}\r\n                    onDelete={onDelete}\r\n                />\r\n                <Link to={`${Paths.ToDo}/${id}`}>\r\n                    <ItemInform title={title} date={date}></ItemInform>\r\n                </Link>\r\n            </Div>\r\n\r\n            <Button onClick={() => onCompleted()}>\r\n                {!isCompleted ? 'Выполнено' : 'Не выполнено'}\r\n            </Button>\r\n        </Container>\r\n    );\r\n};\r\nexport default Item;\r\n","import { useEffect, useState } from 'react';\r\nimport { idT, Item } from '../../../app/types/Item';\r\nimport ItemComponent from '../Item/Item';\r\n\r\ninterface Props {\r\n    item: Item;\r\n    isSelect: boolean;\r\n    onDelete: (item: idT) => void;\r\n    onComplete: (item: idT) => void;\r\n    onSelect: (item: idT) => void;\r\n}\r\n\r\nconst ItemContainer = ({\r\n    item,\r\n    isSelect,\r\n    onDelete,\r\n    onComplete,\r\n    onSelect,\r\n}: Props) => {\r\n    const [isSelectItem, setSelect] = useState<boolean>(false);\r\n\r\n    useEffect(() => {\r\n        setSelect(isSelect);\r\n    });\r\n\r\n    const handleSelect = (id: Item['id']) => {\r\n        setSelect(!isSelectItem);\r\n        onSelect(id);\r\n    };\r\n\r\n    return (\r\n        <ItemComponent\r\n            id={item.id}\r\n            title={item.title}\r\n            date={item.date}\r\n            isCompleted={item.isCompleted}\r\n            isSelect={isSelectItem}\r\n            onSelect={() => handleSelect(item.id)}\r\n            onCompleted={() => onComplete(item.id)}\r\n            onDelete={() => onDelete(item.id)}\r\n        />\r\n    );\r\n};\r\nexport default ItemContainer;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Div = styled.div`\r\n    display: grid;\r\n    grid-template-columns: repeat(4, 1fr);\r\n    column-gap:24px;\r\n    row-gap: 24px;\r\n\r\n`","import { useEffect, useState } from 'react';\r\nimport { idT, Item } from '../../../app/types/Item';\r\nimport ItemContainer from '../ItemContainer/ItemContainer';\r\nimport { Div } from './StyledItemList';\r\n\r\ninterface Props {\r\n    items: Item[];\r\n    selectedItems: idT[];\r\n\r\n    deleteItem: (val: idT) => void;\r\n    completeItem: (val: idT) => void;\r\n    selectItem: (val: idT) => void;\r\n}\r\n\r\nconst ItemList = ({\r\n    items,\r\n    selectedItems,\r\n    deleteItem,\r\n    completeItem,\r\n    selectItem,\r\n}: Props) => {\r\n    const [selectedItemsList, setSelect] = useState<Item['id'][]>([]);\r\n\r\n    useEffect(() => {\r\n        setSelect(selectedItems);\r\n    });\r\n\r\n    return (\r\n        <Div>\r\n            {items.map((item, index) => (\r\n                <ItemContainer\r\n                    item={item}\r\n                    key={index}\r\n                    isSelect={selectedItemsList.includes(item.id)}\r\n                    onSelect={(id) => selectItem(id)}\r\n                    onDelete={(id) => deleteItem(id)}\r\n                    onComplete={(id) => completeItem(id)}\r\n                />\r\n            ))}\r\n        </Div>\r\n    );\r\n};\r\n\r\nexport default ItemList;\r\n"],"names":["DateText","children","light","center","Div","styled","Button","color","isSelect","onSelect","onDelete","useState","isChecked","setChecked","useEffect","Checkbox","primary","checked","onChange","onClick","title","date","Container","props","isComplited","isSelected","id","isCompleted","onCompleted","to","Paths","item","onComplete","isSelectItem","setSelect","handleSelect","items","selectedItems","deleteItem","completeItem","selectItem","selectedItemsList","map","index","includes"],"sourceRoot":""}